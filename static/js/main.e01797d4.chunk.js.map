{"version":3,"sources":["components/Themes/Themes.js","components/globalStyle.js","components/Header/Header.elements.js","assets/sprite.svg","components/Header/ThemeButton.jsx","components/Header/Header.jsx","components/Content/Content.elements.js","components/Content/Portfolio/Portfolio.elements.js","components/Content/Portfolio/Pagination.jsx","components/Content/Portfolio/SwipeHOC.jsx","components/Content/Portfolio/List.jsx","components/Content/Portfolio/Item.jsx","components/Content/Portfolio/Portfolio.jsx","components/Content/Skills/Skills.elements.js","components/Content/Skills/Skills.jsx","components/Content/Content.jsx","components/Footer/Footer.elements.js","components/Footer/Footer.jsx","assets/me.jpg","App.js","components/Themes/useDarkMode.js","index.js"],"names":["lightTheme","body","color","colorSVG","lightColor","accentColor","linkColor","linkHover","cardBg","darkTheme","GlobalStyle","createGlobalStyle","props","theme","HeaderWrap","styled","header","ToggleThemeDiv","div","ThemeLabel","label","ThemeSpan","span","ThemeSVG","svg","ThemeInput","input","ThemeButton","toggleTheme","type","id","onChange","htmlFor","xlinkHref","icons","Header","Main","main","ContentWrap","position","Navbar","nav","NavbarLink","NavLink","Title","h1","horizontalBounce","keyframes","fullScreenAnimation","css","verticalBounce","mobileScreenAnimation","Logo","img","width","top","left","animation","Wrap","motion","Body","gridColumns","CardItem","CardOpenLink","Link","CardContent","CardImageContainer","TitleContainer","CardImage","CardContentContainer","OpenedCardContentContainer","OpenedCardContent","OpenedCardImageContainer","OpenedTitleContainer","CardFooter","Usage","Buttons","Button","a","Overlay","CloseLink","PaginateButtons","PaginateBtn","button","CloseButtonWrap","CloseButton","Pagination","totalPortfolioItems","itemsPerPage","currentPage","paginate","pages","i","Math","ceil","push","map","number","onClick","className","variants","enter","opacity","center","x","exit","direction","SwipeHOC","setCurrentPage","portfolioLength","children","swiping","AnimatePresence","initial","custom","animate","drag","dragConstraints","right","dragElastic","transition","duration","whileTap","cursor","onDragEnd","event","offset","velocity","swipe","abs","swipePower","floor","Card","title","description","imageUrl","layoutId","src","alt","to","List","selectedId","userWidth","window","innerWidth","useState","indexOfLastItem","indexOfFirstItem","currentItems","portfolio","slice","length","card","isSelected","Item","find","item","codeUrl","previewUrl","usage","delay","style","pointerEvents","href","data-content","target","e","preventDefault","y","Store","match","params","Portfolio","controls","useAnimation","start","pageVariants","AnimateSharedLayout","path","component","SkillsContent","SkillsIcons","SkillsSVG","colored","Tooltip","Skills","show","setShow","tooltip","setTooltip","onMouseEnter","onMouseLeave","onMouseMove","tagName","dataset","data-id","rel","in","out","Content","slideOnTop","showAvatar","location","useLocation","activeClassName","exact","exitBeforeEnter","render","pathname","FooterWrap","footer","FooterSVG","FooterLink","Footer","as","App","setTheme","setMode","mode","localStorage","setItem","useEffect","localTheme","getItem","useDarkMode","themeToggler","themeMode","isAvatar","setAvatar","logoConfig","display","logo","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e01797d4.chunk.js","sourcesContent":["export const lightTheme = {\n    body: '#f4f4f8',\n    color: '#4a4e4d',\n    colorSVG: '#95ccf5',\n    lightColor: '#d5d5e5',\n    accentColor: '#4a4e4d',\n    linkColor: '#009cff',\n    linkHover: '#fe4a49',\n    cardBg: '#8c8c8e',\n}\n\nexport const darkTheme = {\n    body: '#434e54',\n    color: '#f4f4f8',\n    colorSVG: '#f6cb49',\n    lightColor: '#536571',\n    accentColor: '#f4f4f8',\n    linkColor: '#539bf5',\n    linkHover: '#f55353',\n    cardBg: '#3e4346',\n}\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *:after,\n  *:before {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: 'Ubuntu', sans-serif;\n    font-size: 14px;\n    margin: 0;\n    padding: 0;\n    background: ${(props) => props.theme.body};\n    color: ${(props) => props.theme.color};\n    height: 100vh;\n    transition: all .3s linear;\n  }\n  #root {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n  .contentWrapper {\n    margin: 0 10%;\n    height: 100%;\n\n    @media screen and (max-width: 1440px) {\n      margin: 0 5%;\n    }\n  }\n  .grid {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: minmax(50px, 10vh) 1fr minmax(50px, 10vh);\n    min-height: 100%;\n    position: relative;\n  }\n\n  a {\n    color: ${(props) => props.theme.linkColor};\n\n    &:hover {\n      color: ${(props) => props.theme.linkHover};\n    }\n  }\n\n  h1, h2, h3 {\n    margin: 0;\n    padding: 0;\n  }\n\n`\n\nexport default GlobalStyle\n","import styled from 'styled-components'\n\nexport const HeaderWrap = styled.header`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin: 0 20px;\n`\nexport const ToggleThemeDiv = styled.div`\n    display: flex;\n    align-items: center;\n`\nexport const ThemeLabel = styled.label`\n    position: relative;\n    display: block;\n    width: 38px;\n    height: 20px;\n    background: transparent;\n    border: 2px solid ${(props) => props.theme.lightColor};\n    border-radius: 24px;\n    cursor: pointer;\n`\nexport const ThemeSpan = styled.span`\n    position: absolute;\n    width: 28px;\n    height: 28px;\n    top: 50%;\n    transform: translateY(-50%);\n    left: -8px;\n    background: ${(props) => props.theme.lightColor};\n    border-radius: 50%;\n    transition: left 0.2s ease;\n`\nexport const ThemeSVG = styled.svg`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 16px;\n    height: 16px;\n    transform: translate(-50%, -50%);\n    fill: ${(props) => props.theme.colorSVG};\n`\nexport const ThemeInput = styled.input`\n    visibility: hidden;\n    &:checked + ${ThemeLabel} > ${ThemeSpan} {\n        left: 14px;\n    }\n`\n","export default __webpack_public_path__ + \"static/media/sprite.3e7f4069.svg\";","import React from 'react'\nimport { ThemeInput, ThemeLabel, ThemeSpan, ThemeSVG } from './Header.elements'\nimport icons from '../../assets/sprite.svg'\n\nconst ThemeButton = ({ theme, toggleTheme }) => {\n    return (\n        <>\n            <ThemeInput type=\"checkbox\" id=\"theme-mode\" onChange={toggleTheme} />\n            <ThemeLabel htmlFor=\"theme-mode\">\n                <ThemeSpan>\n                    <ThemeSVG>\n                        {theme === 'light' ? (\n                            <use xlinkHref={`${icons}#theme_moon`} />\n                        ) : (\n                            <use xlinkHref={`${icons}#theme_sun`} />\n                        )}\n                    </ThemeSVG>\n                </ThemeSpan>\n            </ThemeLabel>\n        </>\n    )\n}\n\nexport default ThemeButton\n","import React from 'react'\nimport { HeaderWrap, ToggleThemeDiv } from './Header.elements'\nimport ThemeButton from './ThemeButton'\n\nconst Header = ({ theme, toggleTheme }) => {\n    return (\n        <HeaderWrap>\n            <ToggleThemeDiv>\n                <ThemeButton theme={theme} toggleTheme={toggleTheme} />\n            </ToggleThemeDiv>\n        </HeaderWrap>\n    )\n}\n\nexport default Header\n","import styled, { css, keyframes } from 'styled-components'\nimport { NavLink } from 'react-router-dom'\n\nexport const Main = styled.main`\n    display: flex;\n    justify-content: center;\n`\nexport const ContentWrap = styled.div`\n    text-align: center;\n    height: 100%;\n    width: 100%;\n    padding: 60px 0 20px 0;\n`\n\nexport const Header = styled.div`\n    position: absolute;\n    top: ${(props) => (props.position ? '50%' : '10vh')};\n    left: 50%;\n    transform: translate(-50%, -50%);\n    transition: top 0.3s ease;\n    width: 100%;\n\n    @media screen and (max-width: 500px) {\n        top: ${(props) => (props.position ? '50%' : '14vh')};\n    }\n`\n\nexport const Navbar = styled.nav`\n    margin-bottom: 10px;\n`\n\nexport const NavbarLink = styled(NavLink)`\n    padding: 0 5px;\n    font-weight: 300;\n\n    &.active {\n        color: #fe4a49;\n        text-decoration: none;\n    }\n`\nexport const Title = styled.h1`\n    font-weight: 300;\n    letter-spacing: 0.1em;\n    pointer-events: none;\n    font-size: 2em;\n\n    @media screen and (max-width: 768px) {\n        font-size: 1.8em;\n    }\n`\n\nconst horizontalBounce = keyframes`\n    0%   { transform: scale(0)      translateX(0) }\n   10%  { transform: scale(.8)     translateX(0) }\n   30%  { transform: scale(1.1,.9)   translateX(-50px) }\n   50%  { transform: scale(.95,1.05) translateX(0) }\n   57%  { transform: scale(1,1)      translateX(-7px) }\n   64%  { transform: scale(1,1)      translateX(0) }\n   100% { transform: scale(1,1)      translateX(0) }\n`\n\nconst fullScreenAnimation = () => css`\n    animation: ${horizontalBounce} 2s cubic-bezier(0.28, 0.84, 0.42, 1);\n`\n\nconst verticalBounce = keyframes`\n    0%   { transform: scale(0)      translateY(0) translateX(-50%) }\n   10%  { transform: scale(.8)     translateY(0) translateX(-50%) }\n   30%  { transform: scale(.9,1.1)   translateY(-50px) translateX(-50%) }\n   50%  { transform: scale(1.05,.95) translateY(0) translateX(-50%) }\n   57%  { transform: scale(1,1)      translateY(-7px) translateX(-50%) }\n   64%  { transform: scale(1,1)      translateY(0) translateX(-50%) }\n   100% { transform: scale(1,1)      translateY(0) translateX(-50%) }\n`\n\nconst mobileScreenAnimation = () => css`\n    animation: ${verticalBounce} 2s cubic-bezier(0.28, 0.84, 0.42, 1);\n`\n\nexport const Logo = styled.img`\n    width: ${(props) => props.width};\n    height: auto;\n    border-radius: 50%;\n    border: 2px solid ${(props) => props.theme.lightColor};\n    position: absolute;\n    top: ${(props) => (props.top ? 'calc(50% - 50px)' : '15px')};\n    left: ${(props) => (props.left ? 'calc(50% - 280px)' : '20px')};\n    ${(props) => (props.animation ? fullScreenAnimation : 'none')};\n    transition: all 0.3s ease;\n\n    @media screen and (max-width: 768px) {\n        top: ${(props) => (props.top ? '20%' : '10px')};\n        left: ${(props) => (props.left ? '50%' : '10%')};\n        transform: translateX(-50%);\n        ${(props) => (props.animation ? mobileScreenAnimation : 'none')};\n    }\n`\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { motion } from 'framer-motion'\n\nexport const Wrap = styled(motion.div)`\n    height: 100%;\n`\n\nexport const Body = styled(motion.div)`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    grid-template-columns: repeat(${(props) => props.gridColumns}, 1fr);\n    grid-template-rows: repeat(2, 1fr);\n    grid-gap: 40px;\n    padding: 20px 5% 20px 5%;\n`\n\nexport const CardItem = styled.div`\n    height: 100%;\n    position: relative;\n`\n\nexport const CardOpenLink = styled(Link)`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`\n\nexport const CardContent = styled(motion.div)`\n    pointer-events: auto;\n    position: relative;\n    border: 1px solid ${(props) => props.theme.lightColor};\n    background: ${(props) => props.theme.cardBg};\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n`\n\nexport const CardImageContainer = styled(motion.div)`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 40vw;\n    height: 420px;\n`\n\nexport const TitleContainer = styled(motion.div)`\n    position: absolute;\n    top: 15px;\n    right: 0;\n    text-align: right;\n\n    h2 {\n        display: inline-block;\n        padding: 10px;\n        background: rgba(78, 78, 77, 0.8);\n        color: #f4f4f8;\n        box-shadow: -2px 5px 10px rgba(78, 78, 77, 0.8);\n        font-size: 1.4em;\n        margin-bottom: 10px;\n\n        @media screen and (max-width: 768px) {\n            font-size: 1.2em;\n        }\n    }\n    span {\n        display: inline-block;\n        padding: 10px;\n        background: rgba(78, 78, 77, 0.8);\n        color: #f4f4f8;\n        box-shadow: -2px 5px 10px rgba(78, 78, 77, 0.8);\n    }\n`\n\nexport const CardImage = styled.img`\n    width: 100%;\n    height: auto;\n    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);\n\n    @media screen and (max-width: 1024px) {\n        width: auto;\n    }\n\n    @media screen and (max-width: 768px) {\n        width: 180%;\n    }\n\n    @media screen and (max-width: 500px) {\n        width: 260%;\n    }\n`\n\nexport const CardContentContainer = styled(motion.div)`\n    width: 100%;\n    height: 100%;\n    position: relative;\n    display: block;\n    pointer-events: none;\n`\n\n/* Opened card */\nexport const OpenedCardContentContainer = styled(CardContentContainer)`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 1;\n`\nexport const OpenedCardContent = styled(CardContent)`\n    height: auto;\n    max-width: 40vw;\n    overflow: hidden;\n\n    @media screen and (max-width: 1024px) {\n        max-width: 65vw;\n    }\n\n    @media screen and (max-width: 500px) {\n        max-width: 85vw;\n    }\n`\nexport const OpenedCardImageContainer = styled(CardImageContainer)`\n    z-index: 1;\n`\nexport const OpenedTitleContainer = styled(TitleContainer)`\n    top: 60%;\n    right: 0;\n    z-index: 1;\n`\n\nexport const CardFooter = styled(motion.div)`\n    padding-top: 450px;\n    width: 100%;\n\n    @media screen and (max-width: 500px) {\n        padding-top: 400px;\n    }\n`\n/* --- */\n\nexport const Usage = styled.div`\n    text-align: right;\n    margin-right: 10px;\n    margin-bottom: 20px;\n\n    span {\n        font-size: 0.8em;\n        padding: 5px 8px;\n        margin: 0 5px;\n        color: ${(props) => props.theme.body};\n        background: ${(props) => props.theme.color};\n    }\n`\n\nexport const Buttons = styled.div`\n    height: 50px;\n    width: 100%;\n    display: flex;\n    justify-content: space-around;\n    overflow: hidden;\n`\n\nexport const Button = styled.a`\n    font-size: 0.8em;\n    display: inline-block;\n    flex: 1;\n    line-height: 50px;\n    color: #f4f4f8;\n    background: #64826f;\n    text-decoration: none;\n    letter-spacing: 1.4px;\n    position: relative;\n\n    &:last-child {\n        background: #646f82;\n    }\n    span {\n        display: inline-block;\n        transition: 0.3s;\n    }\n    &:before {\n        content: attr(data-content);\n        position: absolute;\n        top: -100%;\n        left: 0;\n        width: 100%;\n        background: #517557;\n        transition: 0.3s;\n    }\n    &:last-child:before {\n        background: #515975;\n    }\n    &:hover {\n        color: #fff;\n    }\n    &:hover span {\n        transform: translateY(100%);\n    }\n    &:hover:before {\n        top: 0;\n    }\n`\n\nexport const Overlay = styled(motion.div)`\n    z-index: 1;\n    position: fixed;\n    background: rgba(78, 78, 76, 0.3);\n    will-change: opacity;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 100vw;\n    height: 115vh;\n`\n\nexport const CloseLink = styled(Link)`\n    display: block;\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    width: 100vw;\n    left: 50%;\n    transform: translateX(-50%);\n`\n\nexport const PaginateButtons = styled.div`\n    position: absolute;\n    bottom: -20px;\n    left: 50%;\n    transform: translateX(-50%);\n`\n\nexport const PaginateBtn = styled.button`\n    display: inline-block;\n    width: 10px;\n    height: 10px;\n    margin: 0 3px;\n    border: none;\n    background: ${(props) => props.theme.lightColor};\n    border-radius: 5px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n\n    &:hover {\n        background: ${(props) => props.theme.accentColor};\n    }\n\n    &.active {\n        width: 30px;\n        background: ${(props) => props.theme.accentColor};\n    }\n`\n\nexport const CloseButtonWrap = styled(motion.div)`\n    position: absolute;\n    top: 10px;\n    right: 0;\n    z-index: 2;\n`\n\nexport const CloseButton = styled(Link)`\n    display: inline-block;\n    padding: 0 10px 2px 10px;\n    background: rgba(78, 78, 77, 0.6);\n    color: #f4f4f8;\n    font-size: 2.4em;\n    box-shadow: -2px 5px 10px rgba(78, 78, 77, 0.6);\n    text-decoration: none;\n`\n","import React from 'react'\nimport { PaginateButtons, PaginateBtn } from './Portfolio.elements'\n\nconst Pagination = ({ totalPortfolioItems, itemsPerPage, currentPage, paginate }) => {\n    const pages = []\n\n    for (let i = 0; i < Math.ceil(totalPortfolioItems / itemsPerPage); i++) {\n        pages.push(i)\n    }\n\n    return (\n        <PaginateButtons>\n            {pages.map((number) => (\n                <PaginateBtn\n                    key={number}\n                    onClick={() => paginate(number)}\n                    className={number === currentPage ? 'active' : ''}></PaginateBtn>\n            ))}\n        </PaginateButtons>\n    )\n}\n\nexport default Pagination\n","import React from 'react'\nimport { AnimatePresence } from 'framer-motion'\nimport Pagination from './Pagination'\nimport { Body } from './Portfolio.elements'\n\nconst variants = {\n    enter: {\n        opacity: 0,\n    },\n    // enter: (direction) => {\n    //     return {\n    //         x: direction > 0 ? 2000 : -2000,\n    //         opacity: 0,\n    //     }\n    // },\n    center: {\n        x: 0,\n        opacity: 1,\n    },\n    exit: (direction) => {\n        return {\n            x: direction < 0 ? 2000 : -2000,\n            opacity: 0,\n        }\n    },\n}\n\nconst swipeConfidenceThreshold = 10000\nconst swipePower = (offset, velocity) => {\n    return Math.abs(offset) * velocity\n}\n\nconst SwipeHOC = ({\n    gridColumns,\n    currentPage,\n    direction,\n    setCurrentPage,\n    itemsPerPage,\n    portfolioLength,\n    children,\n}) => {\n    const swiping = (number) => {\n        setCurrentPage([currentPage + number, number])\n    }\n\n    const paginate = (number) => {\n        const direction = number > currentPage ? 1 : -1\n        setCurrentPage([number, direction])\n    }\n\n    return (\n        <>\n            <AnimatePresence initial={false} custom={direction}>\n                <Body\n                    gridColumns={gridColumns}\n                    key={currentPage}\n                    custom={direction}\n                    variants={variants}\n                    initial=\"enter\"\n                    animate=\"center\"\n                    exit=\"exit\"\n                    drag=\"x\"\n                    dragConstraints={{ left: 0, right: 0 }}\n                    dragElastic={1}\n                    transition={{\n                        opacity: { duration: 0.5 },\n                    }}\n                    whileTap={{ cursor: 'grabbing' }}\n                    onDragEnd={(event, { offset, velocity }) => {\n                        const swipe = swipePower(offset.x, velocity.x)\n\n                        if (\n                            swipe < -swipeConfidenceThreshold &&\n                            currentPage < Math.floor(portfolioLength / itemsPerPage)\n                        ) {\n                            swiping(1)\n                        } else if (swipe > swipeConfidenceThreshold && currentPage > 0) {\n                            swiping(-1)\n                        }\n                    }}>\n                    {children}\n                </Body>\n            </AnimatePresence>\n            <Pagination\n                totalPortfolioItems={portfolioLength}\n                itemsPerPage={itemsPerPage}\n                currentPage={currentPage}\n                paginate={paginate}\n            />\n        </>\n    )\n}\n\nexport default SwipeHOC\n","import React, { useState } from 'react'\nimport SwipeHOC from './SwipeHOC'\nimport {\n    CardItem,\n    CardContentContainer,\n    CardContent,\n    CardImageContainer,\n    TitleContainer,\n    CardOpenLink,\n    CardImage,\n} from './Portfolio.elements'\nimport portfolio from '../../../db.json'\n\nconst Card = ({ id, title, description, imageUrl }) => {\n    return (\n        <CardItem>\n            <CardContentContainer>\n                <CardContent layoutId={`${CardContent}-${id}`}>\n                    <CardImageContainer layoutId={`${CardImageContainer}-${id}`}>\n                        <CardImage src={imageUrl} alt={`${title} thumbnail`} />\n                    </CardImageContainer>\n                    <TitleContainer layoutId={`${TitleContainer}-${id}`}>\n                        <h2>{title}</h2>\n                        <br />\n                        <span>{description}</span>\n                    </TitleContainer>\n                </CardContent>\n            </CardContentContainer>\n            <CardOpenLink to={`/portfolio/${id}`} />\n        </CardItem>\n    )\n}\n\nconst List = ({ selectedId }) => {\n    const userWidth = window.innerWidth\n\n    let gridColumns = 3\n    if (userWidth <= 1024 && userWidth > 500) {\n        gridColumns = 2\n    } else if (userWidth <= 500) {\n        gridColumns = 1\n    }\n\n    const [itemsPerPage] = useState(gridColumns * 2)\n    const [[currentPage, direction], setCurrentPage] = useState([0, 0])\n\n    const indexOfLastItem = (currentPage + 1) * itemsPerPage\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage\n    const currentItems = portfolio.slice(indexOfFirstItem, indexOfLastItem)\n\n    return (\n        <SwipeHOC\n            gridColumns={gridColumns}\n            currentPage={currentPage}\n            direction={direction}\n            setCurrentPage={setCurrentPage}\n            itemsPerPage={itemsPerPage}\n            portfolioLength={portfolio.length}>\n            {currentItems.map((card) => (\n                <Card key={card.id} {...card} isSelected={card.id === selectedId} />\n            ))}\n        </SwipeHOC>\n    )\n}\n\nexport default List\n","import React from 'react'\nimport portfolio from '../../../db.json'\nimport {\n    Overlay,\n    CloseLink,\n    CardContent,\n    CardFooter,\n    Usage,\n    CardImageContainer,\n    CardImage,\n    TitleContainer,\n    Buttons,\n    Button,\n    OpenedCardContentContainer,\n    OpenedCardContent,\n    OpenedCardImageContainer,\n    OpenedTitleContainer,\n    CloseButtonWrap,\n    CloseButton,\n} from './Portfolio.elements'\n\nconst Item = ({ id }) => {\n    const { title, description, imageUrl, codeUrl, previewUrl, usage } = portfolio.find(\n        (item) => item.id === id,\n    )\n\n    return (\n        <>\n            <Overlay\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0, transition: { duration: 0.15 } }}\n                transition={{ duration: 0.2, delay: 0.15 }}\n                style={{ pointerEvents: 'auto' }}>\n                <CloseLink to=\"/portfolio\" />\n            </Overlay>\n\n            <OpenedCardContentContainer>\n                <OpenedCardContent layoutId={`${CardContent}-${id}`}>\n                    <OpenedCardImageContainer layoutId={`${CardImageContainer}-${id}`}>\n                        <CardImage src={imageUrl} alt={`${title} thumbnail`} />\n                    </OpenedCardImageContainer>\n                    <OpenedTitleContainer layoutId={`${TitleContainer}-${id}`}>\n                        <h2>{title}</h2>\n                        <br />\n                        <span>{description}</span>\n                    </OpenedTitleContainer>\n                    <CardFooter>\n                        <Usage>\n                            {usage.map((item, i) => (\n                                <span key={i}>{item}</span>\n                            ))}\n                        </Usage>\n                        <Buttons>\n                            {codeUrl ? (\n                                <Button href={codeUrl} data-content=\"Code\" target=\"_bllank\">\n                                    <span>Code</span>\n                                </Button>\n                            ) : (\n                                <Button\n                                    href=\"#\"\n                                    data-content=\"Code\"\n                                    onClick={(e) => e.preventDefault()}>\n                                    <span>Code</span>\n                                </Button>\n                            )}\n                            <Button href={previewUrl} data-content=\"Demo\" target=\"_bllank\">\n                                <span>Demo</span>\n                            </Button>\n                        </Buttons>\n                    </CardFooter>\n                    <CloseButtonWrap\n                        exit={{ opacity: 0, y: '-100%' }}\n                        transition={{ duration: 0.4 }}>\n                        <CloseButton to=\"/portfolio\">&times;</CloseButton>\n                    </CloseButtonWrap>\n                </OpenedCardContent>\n            </OpenedCardContentContainer>\n        </>\n    )\n}\n\nexport default Item\n","import React from 'react'\nimport { useAnimation, AnimateSharedLayout, AnimatePresence } from 'framer-motion'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport List from './List'\nimport Item from './Item'\nimport { Wrap } from './Portfolio.elements'\n\nconst Store = ({ match }) => {\n    const { id } = match.params\n\n    return (\n        <>\n            <List selectedId={id} />\n            <AnimatePresence>{id && <Item id={id} key=\"item\" />}</AnimatePresence>\n        </>\n    )\n}\n\nconst Portfolio = (props) => {\n    const controls = useAnimation()\n\n    controls.start({\n        opacity: 1,\n        x: 0,\n        transition: { delay: 0.4 },\n    })\n\n    return (\n        <Wrap initial=\"initial\" exit=\"out\" variants={props.pageVariants} animate={controls}>\n            <AnimateSharedLayout type=\"crossfade\">\n                <Router>\n                    <Route path={['/portfolio/:id', '/portfolio']} component={Store} />\n                </Router>\n            </AnimateSharedLayout>\n        </Wrap>\n    )\n}\n\nexport default Portfolio\n","import styled, { css } from 'styled-components'\nimport { motion } from 'framer-motion'\n\nexport const Wrap = styled(motion.div)`\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const SkillsContent = styled.div`\n    height: 80%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const SkillsIcons = styled.div`\n    width: 30vw;\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n    position: relative;\n\n    @media screen and (max-width: 500px) {\n        width: 50%;\n    }\n`\n\nexport const SkillsSVG = styled.svg`\n    width: 100px;\n    height: 100px;\n    padding: 5px;\n    fill: ${(props) => props.theme.lightColor};\n    fill-opacity: 0.6;\n    transition: fill-opacity 0.3s ease;\n\n    ${(props) =>\n        props.colored &&\n        css`\n            fill: ${(props) => props.color};\n        `}\n\n    &:hover {\n        fill-opacity: 0.8;\n    }\n\n    @media screen and (max-width: 375px) {\n        width: 60px;\n        height: 60px;\n    }\n`\n\nexport const Tooltip = styled.div`\n    position: absolute;\n    bottom: -60px;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 200px;\n    background: ${(props) => props.theme.lightColor};\n    color: ${(props) => props.theme.color};\n    line-height: 30px;\n`\n","import React, { useState } from 'react'\nimport icons from '../../../assets/sprite.svg'\nimport { Wrap, SkillsContent, SkillsIcons, SkillsSVG, Tooltip } from './Skills.elements'\n\nconst Skills = (props) => {\n    const [show, setShow] = useState(false)\n    const [tooltip, setTooltip] = useState('')\n\n    const showToolip = () => {\n        setShow(true)\n    }\n\n    const hideTooltip = () => {\n        setShow(false)\n        setTooltip('')\n    }\n\n    const tooltipHandler = (e) => {\n        if (e.target.tagName === 'svg') {\n            setTooltip(e.target.dataset.id)\n        }\n    }\n\n    return (\n        <Wrap initial=\"initial\" animate=\"in\" exit=\"out\" variants={props.pageVariants}>\n            <SkillsContent>\n                <SkillsIcons\n                    onMouseEnter={showToolip}\n                    onMouseLeave={hideTooltip}\n                    onMouseMove={tooltipHandler}>\n                    <SkillsSVG colored color={'#15aabf'} data-id=\"HTML 5\">\n                        <use xlinkHref={`${icons}#html_5`} />\n                    </SkillsSVG>\n                    <SkillsSVG colored color={'#f783ac'} data-id=\"CSS 3\">\n                        <use xlinkHref={`${icons}#css_3`} />\n                    </SkillsSVG>\n                    <SkillsSVG colored color={'#fd7e14'} data-id=\"JavaScript\">\n                        <use xlinkHref={`${icons}#js`} />\n                    </SkillsSVG>\n                    <SkillsSVG colored color={'#4c6ef5'} data-id=\"React\">\n                        <use xlinkHref={`${icons}#react`} />\n                    </SkillsSVG>\n\n                    {show && <Tooltip>{tooltip}</Tooltip>}\n                </SkillsIcons>\n\n                <div>\n                    Hardcoded by{' '}\n                    <a\n                        href=\"https://github.com/Evgeny-Archi/ReactJS/tree/master/portfolio\"\n                        title=\"link to gitHub on this site source code\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\">\n                        me\n                    </a>\n                </div>\n            </SkillsContent>\n        </Wrap>\n    )\n}\n\nexport default Skills\n","import React from 'react'\nimport { Route, Switch, useLocation } from 'react-router-dom'\nimport { AnimatePresence } from 'framer-motion'\nimport { Main, ContentWrap, Navbar, NavbarLink, Header, Title } from './Content.elements'\nimport Portfolio from './Portfolio/Portfolio'\nimport Skills from './Skills/Skills'\n\nconst pageVariants = {\n    initial: {\n        opacity: 0,\n        x: '-100vw',\n        transition: {\n            delay: 1,\n        },\n    },\n    in: {\n        opacity: 1,\n        x: 0,\n    },\n    out: {\n        opacity: 0,\n        x: '100vw',\n    },\n}\n\nconst Content = ({ slideOnTop, showAvatar }) => {\n    const location = useLocation()\n\n    return (\n        <Main>\n            <ContentWrap>\n                <Header position={slideOnTop}>\n                    <Navbar>\n                        <NavbarLink activeClassName=\"active\" exact to=\"/\">\n                            Home\n                        </NavbarLink>\n                        <NavbarLink activeClassName=\"active\" to=\"/portfolio\">\n                            Portfolio\n                        </NavbarLink>\n                        <NavbarLink activeClassName=\"active\" to=\"/skills\">\n                            Skills\n                        </NavbarLink>\n                    </Navbar>\n\n                    <div onMouseEnter={showAvatar}>\n                        <Title>Evgeny Archibasov</Title>\n                    </div>\n                </Header>\n\n                <AnimatePresence exitBeforeEnter>\n                    <Switch location={location} key={location.pathname}>\n                        <Route path=\"/\" exact />\n                        <Route\n                            path=\"/portfolio\"\n                            render={() => <Portfolio pageVariants={pageVariants} />}\n                        />\n                        <Route\n                            path=\"/skills\"\n                            render={() => <Skills pageVariants={pageVariants} />}\n                        />\n                        <Route>\n                            <h1>no match</h1>\n                        </Route>\n                    </Switch>\n                </AnimatePresence>\n            </ContentWrap>\n        </Main>\n    )\n}\n\nexport default Content\n","import styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\n\nexport const FooterWrap = styled.footer`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const FooterSVG = styled.svg`\n    width: 26px;\n    height: 26px;\n    fill: ${(props) => props.theme.lightColor};\n    transition: fill 0.2s linear;\n`\n\nexport const FooterLink = styled(NavLink)`\n    text-decoration: none;\n    padding: 0 10px;\n\n    &:hover > ${FooterSVG} {\n        fill: ${(props) => props.theme.accentColor};\n    }\n`\n","import React from 'react'\nimport { FooterWrap, FooterLink, FooterSVG } from './Footer.elements'\nimport icons from '../../assets/sprite.svg'\n\nconst Footer = () => {\n    return (\n        <FooterWrap>\n            <FooterLink\n                as=\"a\"\n                href=\"https://github.com/Evgeny-Archi/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                title=\"github.com\">\n                <FooterSVG>\n                    <use xlinkHref={`${icons}#github`} />\n                </FooterSVG>\n            </FooterLink>\n            <FooterLink\n                as=\"a\"\n                href=\"https://www.instagram.com/evgeny.off/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                title=\"instagram.com\">\n                <FooterSVG>\n                    <use xlinkHref={`${icons}#instagram`} />\n                </FooterSVG>\n            </FooterLink>\n            <FooterLink\n                as=\"a\"\n                href=\"https://vk.com/e.archibasov\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                title=\"vk.com\">\n                <FooterSVG>\n                    <use xlinkHref={`${icons}#vk`} />\n                </FooterSVG>\n            </FooterLink>\n        </FooterWrap>\n    )\n}\n\nexport default Footer\n","export default __webpack_public_path__ + \"static/media/me.afec10ba.jpg\";","import React, { useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { lightTheme, darkTheme } from './components/Themes/Themes'\nimport { useDarkMode } from './components/Themes/useDarkMode'\nimport GlobalStyle from './components/globalStyle'\nimport { ThemeProvider } from 'styled-components'\nimport { Header, Content, Footer } from './components'\nimport { Logo } from './components/Content/Content.elements'\nimport logo from './assets/me.jpg'\n\nconst App = () => {\n    const [theme, themeToggler] = useDarkMode()\n    const themeMode = theme === 'light' ? lightTheme : darkTheme\n\n    const location = useLocation()\n    const slideOnTop = location.pathname === '/' ? true : false\n\n    const [isAvatar, setAvatar] = useState(false)\n    const showAvatar = () => {\n        setAvatar(true)\n    }\n\n    const logoConfig = {\n        display: isAvatar || !slideOnTop ? 'block' : 'none',\n        width: slideOnTop ? '100px' : '50px',\n        top: slideOnTop,\n        left: slideOnTop,\n        animation: slideOnTop,\n    }\n\n    return (\n        <ThemeProvider theme={themeMode}>\n            <GlobalStyle />\n            <div className=\"contentWrapper\">\n                <div className=\"grid\">\n                    <Header theme={theme} toggleTheme={themeToggler} />\n                    <Content slideOnTop={slideOnTop} showAvatar={showAvatar} />\n                    <Footer />\n                    <Logo\n                        src={logo}\n                        alt=\"Avatar\"\n                        style={{ display: logoConfig.display }}\n                        {...logoConfig}\n                    />\n                </div>\n            </div>\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","import { useState, useEffect } from 'react'\n\nexport const useDarkMode = () => {\n    const [theme, setTheme] = useState('light')\n\n    const setMode = (mode) => {\n        window.localStorage.setItem('theme', mode)\n        setTheme(mode)\n    }\n\n    const themeToggler = () => {\n        theme === 'light' ? setMode('dark') : setMode('light')\n    }\n\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme')\n        localTheme ? setTheme(localTheme) : setTheme('light')\n    }, [])\n\n    return [theme, themeToggler]\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root'),\n)\n"],"sourceRoot":""}